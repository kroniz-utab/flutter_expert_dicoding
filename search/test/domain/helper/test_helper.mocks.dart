// Mocks generated by Mockito 5.0.16 from annotations
// in search/test/domain/helper/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:core/domain/entities/movie_entities/movie.dart' as _i6;
import 'package:core/domain/entities/movie_entities/movie_detail.dart' as _i7;
import 'package:core/domain/entities/tv_entities/season_detail.dart' as _i11;
import 'package:core/domain/entities/tv_entities/tv.dart' as _i9;
import 'package:core/domain/entities/tv_entities/tv_detail.dart' as _i10;
import 'package:core/domain/repositories/movie_repository.dart' as _i3;
import 'package:core/domain/repositories/tv_repository.dart' as _i8;
import 'package:core/utils/failure.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i3.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, _i7.MovieDetail>>.value(
              _FakeEither_0<_i5.Failure, _i7.MovieDetail>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i7.MovieDetail>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> saveWatchlist(
          _i7.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither_0<_i5.Failure, String>()))
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> removeWatchlist(
          _i7.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither_0<_i5.Failure, String>()))
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TVRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVRepository extends _i1.Mock implements _i8.TVRepository {
  MockTVRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>> getTVOnTheAir() =>
      (super.noSuchMethod(Invocation.method(#getTVOnTheAir, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i9.TV>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i9.TV>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.TVDetail>> getTVShowDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTVShowDetail, [id]),
              returnValue: Future<_i2.Either<_i5.Failure, _i10.TVDetail>>.value(
                  _FakeEither_0<_i5.Failure, _i10.TVDetail>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i10.TVDetail>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>> getPopularTVShows() =>
      (super.noSuchMethod(Invocation.method(#getPopularTVShows, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i9.TV>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i9.TV>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>> getTopRatedTVShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTVShows, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i9.TV>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i9.TV>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i9.TV>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i9.TV>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>> getSimilarTVShows(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getSimilarTVShows, [id]),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i9.TV>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i9.TV>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>> searchTVShows(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTVShows, [query]),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i9.TV>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i9.TV>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> saveWatchlist(
          _i10.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tv]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither_0<_i5.Failure, String>()))
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> removeWatchlist(
          _i10.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tv]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither_0<_i5.Failure, String>()))
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>> getWatchListTVShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchListTVShow, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<_i9.TV>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i9.TV>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<_i9.TV>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i11.SeasonDetail>> getTVSeasonDetail(
          int? tvId, int? season) =>
      (super.noSuchMethod(Invocation.method(#getTVSeasonDetail, [tvId, season]),
          returnValue: Future<_i2.Either<_i5.Failure, _i11.SeasonDetail>>.value(
              _FakeEither_0<_i5.Failure, _i11.SeasonDetail>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i11.SeasonDetail>>);
  @override
  String toString() => super.toString();
}
